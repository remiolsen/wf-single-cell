# Include shared CI
include:
    - project: "epi2melabs/ci-templates"
      file: "wf-containers.yaml"

variables:
    # Workflow inputs given to nextflow.
    # The workflow should define `--out_dir`, the CI template sets this.
    # Only common file inputs and option values need to be given here
    # (not things such as -profile)
    CI_FLAVOUR: "new"
    NF_BEFORE_SCRIPT: "wget -O test_data.tar.gz  https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-single-cell/v0.2.8_test_data.tar.gz && tar -xzvf test_data.tar.gz"
    NF_WORKFLOW_OPTS: "--fastq test_data/fastq/ --single_cell_sample_sheet test_data/samples.test.csv --ref_genome_dir test_data/refdata-gex-GRCh38-2020-A --matrix_min_genes 1 --matrix_min_cells 1 --matrix_max_mito 100 --params.max_threads 4"

docker-run:
    artifacts:
        when: always
        exclude: []

    parallel:
      matrix:
        - MATRIX_NAME: [
          "standard",
          "integration-test"
        ]
    rules:
      # NOTE As we're overriding the rules block for the included docker-run
      #   we must redefine this CI_COMMIT_BRANCH rule to prevent docker-run
      #   being incorrectly scheduled for "detached merge request pipelines" etc.
      - if: ($CI_COMMIT_BRANCH == null || $CI_COMMIT_BRANCH == "dev-template")
        when: never
      - if: $MATRIX_NAME == 'standard'
        variables:
          NF_BEFORE_SCRIPT: "wget -O test_data.tar.gz  https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-single-cell/v0.2.8_test_data.tar.gz && tar -xzvf test_data.tar.gz"
          NF_WORKFLOW_OPTS: "--fastq test_data/fastq/ --single_cell_sample_sheet test_data/samples.test.csv --ref_genome_dir test_data/refdata-gex-GRCh38-2020-A --matrix_min_genes 1 --matrix_min_cells 1 --matrix_max_mito 100 --params.max_threads 4"

      - if: $MATRIX_NAME == "integration-test"
        variables:
          NF_BEFORE_SCRIPT: "wget https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-single-cell/ci_data.tar.gz && tar -xzvf ci_data.tar.gz"
          NF_WORKFLOW_OPTS: "--fastq ci_data/sample1.fq --ref_genome_dir ci_data/10x_ref_chr21_22 --matrix_min_genes 1 --matrix_min_cells 1 --expected_cells 10 --params.max_threads 4"

macos-run:
  # Let's avoid those ARM64 runners for now
  tags:
    - macos
    - x86

integration_test:
  extends: .setup-alpine-nextflow
  dependencies: ["docker-run: [integration-test]"]
  stage: post-test
  script:
    - echo "ls" && ls
    - ls wf-single-cell
    - SHA=$(./nextflow config -properties|grep ${PYTEST_CONTAINER_CONFIG_KEY}|awk -F= '{print $2}')
    - IMAGE="${DOCKERHUB_NAMESPACE}/${CI_PROJECT_NAME}:${SHA}"
    - docker run -v ${PWD}:/host $IMAGE pytest /host/test/workflow_integration.py;
